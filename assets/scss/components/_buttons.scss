/*==================================================

  Buttons

==================================================*/

@mixin buttons($theme) {

  $primary    : map-get($theme, primary);
  $accent     : map-get($theme, accent);
  $warn       : map-get($theme, warn);
  $success    : map-get($theme, success);
  $foreground : map-get($theme, foreground);
  $background : map-get($theme, background);

  /*
   * Shared style
   */

  %button-shared {
    display             : inline-block;
    cursor              : pointer;
    overflow            : hidden;
    position            : relative;
    outline             : none;
    border              : none;
    border-radius       : .3rem;
    user-select         : none;
    -webkit-user-select : none;
    font-weight         : bold;
    transition          : .2s;

    span, svg, img {
      vertical-align: middle;
    }

  }


  /*
   * Default button
   */

  .btn {
    @extend %button-shared;
    padding     : 1rem 2.5rem;
    background  : transparent;
    @include get-prop-color(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(fill, map_get($foreground, text-primary), 0, $theme);

    &:hover, &:focus {
      @include get-prop-color(background, map_get($background, hover), .86, $theme);
    }

    &:active {}

    &:disabled {
      pointer-events: none;
      color         : map_get($foreground, disabled);
      fill          : map_get($foreground, disabled);
    }

    @extend %ripple;
    @extend %loading;

  }


  /*
   * Raised button
   */

  .btn-raised {
    @extend %button-shared;
    padding     : 1rem 2.5rem;
    box-shadow  : 0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);
    @include get-prop-contrast(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-contrast(fill, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(background, map_get($background,  card), 0, $theme);

    &:hover, &:focus {}

    &:active {
      box-shadow: 0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);
    }

    &:disabled {
      pointer-events: none;
      box-shadow    : none;
      background    : map_get($background, hover);
      color         : map_get($foreground, disabled);
      fill          : map_get($foreground, disabled);
    }

    @extend %ripple;
    @extend %loading;

  }


  /*
   * Outline button
   */

  .btn-outline {
    @extend %button-shared;
    padding     : 1rem 2.5rem;
    background  : transparent;
    border-width: .2rem;
    border-style: solid;
    @include get-prop-color(border-color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(fill, map_get($foreground, text-primary), 0, $theme);

    &:hover, &:focus {
      @include get-prop-color(background, map_get($background, hover), .86, $theme);
    }

    &:active {}

    &:disabled {
      pointer-events: none;
      border-color  : map_get($foreground, disabled);
      color         : map_get($foreground, disabled);
      fill          : map_get($foreground, disabled);
    }

    @extend %ripple;
    @extend %loading;

  }


  /*
   * Icon button
   */

  .btn-icon {
    @extend %button-shared;
    display         : inline-flex;
    justify-content : center;
    align-items     : center;
    width           : 40px;
    height          : 40px;
    border-radius   : 50%;
    background      : transparent;
    @include get-prop-color(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(fill, map_get($foreground, text-primary), 0, $theme);

    &:hover, &:focus {
      @include get-prop-color(background, map_get($background, hover), .86, $theme);
    }

    &:active {}

    &:disabled {
      pointer-events: none;
      border-color  : map_get($foreground, disabled);
      color         : map_get($foreground, disabled);
      fill          : map_get($foreground, disabled);
    }

    @extend %ripple;
    @extend %loading;

  }


  /*
   * Ripple
   */

  %ripple {
    @include get-ripple-color($theme);

    &:before {
      content             : "";
      opacity             : 0;
      pointer-events      : none;
      position            : absolute;
      top                 : 0;
      left                : 0;
      width               : 100%;
      height              : 100%;
      background-repeat   : no-repeat;
      background-position : 50%;
      transform           : scale(10, 10);
      transition          : transform .5s, opacity 1s;
    }

    &:active:before {
      opacity   : .3;
      transform : scale(0, 0);
      transition: 0s;
    }

  }


  /*
   * Button states (loading, error)
   */

  %loading {

    &.loading {
      pointer-events: none;
      position      : relative;
      border        : none;
      color         : transparent;

      span, svg, img {
        opacity: 0;
      }

      &:after {
        content       : '';
        position      : absolute;
        top           : 50%;
        left          : 50%;
        height        : 1.8rem;
        width         : 1.8rem;
        border-radius : 50%;
        border-width  : .2rem;
        border-style  : solid;
        border-color  : map_get($foreground, text-primary) map_get($foreground, text-primary) transparent transparent;
        animation     : loading-animation .75s linear infinite;

        @keyframes loading-animation {
          0%   { transform: translate(-50%,-50%) rotate(0deg); }
          100% { transform: translate(-50%,-50%) rotate(360deg); }
        }

      }

    }

  }

}


/*

.btn-outline {
  @extend %button-shared;
  padding   : 1rem 2.5rem;
  border    : .1rem solid $accent;
  color     : $accent;
  background: transparent;

  &:hover, &:focus {
    background: fade-out($accent, .8);
  }

  &:active {}

  @extend %ripple;
  @extend %button-states;
  @extend %disabled;

}

.btn-ghost {
  @extend %button-shared;
  padding   : 1rem 2.5rem;
  border    : none;
  background: transparent;
  color     : map_get($foreground, base);
  fill      : map_get($foreground, base);

  &:hover, &:focus {
    background: fade-out($accent, .9);
  }

  &:active {
    background: fade-out($accent, .8);
  }

  @extend %ripple;
  @extend %button-states;
  @extend %disabled;

}

.btn-icon {}

.btn-contain {}

*/