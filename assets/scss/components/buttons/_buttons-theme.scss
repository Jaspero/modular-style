@mixin buttons($theme) {

  $primary    : map-get($theme, primary);
  $accent     : map-get($theme, accent);
  $warn       : map-get($theme, warn);
  $success    : map-get($theme, success);
  $foreground : map-get($theme, foreground);
  $background : map-get($theme, background);


  /*
   * Default button
   */

  .btn {
    @include get-prop-color(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(fill, map_get($foreground, text-primary), 0, $theme);

    &:hover, &:focus, &:active {
      @include get-prop-color(background, map_get($background, hover), .86, $theme);
    }

    &:disabled {
      color         : map_get($foreground, disabled);
      fill          : map_get($foreground, disabled);
    }

    @extend %loading;

  }


  /*
   * Raised button
   */

  .btn-raised {
    @include get-prop-contrast(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-contrast(fill, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(background, map_get($background,  card), 0, $theme);


    &:disabled {

      background    : map_get($background, hover);
      color         : map_get($foreground, disabled);
      fill          : map_get($foreground, disabled);
    }

    @extend %loading;

  }


  /*
   * Outline button
   */

  .btn-outline {
    @include get-prop-color(border-color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(fill, map_get($foreground, text-primary), 0, $theme);

    &:hover, &:focus, &:active {
      @include get-prop-color(background, map_get($background, hover), .86, $theme);
    }

    &:disabled {
      border-color  : map_get($foreground, disabled);
      color         : map_get($foreground, disabled);
      fill          : map_get($foreground, disabled);
    }

    @extend %loading;

  }


  /*
   * Icon button
   */

  .btn-icon {
    @include get-prop-color(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(fill, map_get($foreground, text-primary), 0, $theme);

    &:hover, &:focus, &:active {
      @include get-prop-color(background, map_get($background, hover), .86, $theme);
    }

    &:disabled {
      border-color  : map_get($foreground, disabled);
      color         : map_get($foreground, disabled);
      fill          : map_get($foreground, disabled);
    }

    @extend %loading;

  }


  /*
   * Button states (loading, error)
   */

  %loading {

    &.loading {
      pointer-events: none;
      position      : relative;
      border        : none;
      color         : transparent;

      span, svg, img {
        opacity: 0;
      }

      &:after {
        content       : '';
        position      : absolute;
        top           : 50%;
        left          : 50%;
        height        : 1.8rem;
        width         : 1.8rem;
        border-radius : 50%;
        border-width  : .2rem;
        border-style  : solid;
        border-color  : map_get($foreground, text-primary) map_get($foreground, text-primary) transparent transparent;
        animation     : loading-animation .75s linear infinite;

        @keyframes loading-animation {
          0%   { transform: translate(-50%,-50%) rotate(0deg); }
          100% { transform: translate(-50%,-50%) rotate(360deg); }
        }

      }

    }

  }

}