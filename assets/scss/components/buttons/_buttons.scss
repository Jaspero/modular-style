@import "buttons-variables";

@mixin buttons($theme) {

  $primary    : map-get($theme, primary);
  $accent     : map-get($theme, accent);
  $warn       : map-get($theme, warn);
  $success    : map-get($theme, success);
  $foreground : map-get($theme, foreground);
  $background : map-get($theme, background);


  /*
   * Shared style
   */

  %button-base {
    display: inline-flex;
    cursor: pointer;
    overflow: hidden;
    user-select: none;
    -webkit-user-select: none;
    position: relative;
    padding: $button-padding;
    border-radius: $button-border-radius;
    border: none;
    outline: none;
    font-weight: $button-font-weight;
    font-size: $button-font-size;
    transition: .2s;

    span, svg, img {
      vertical-align: middle;
    }

    &.loading {
      pointer-events: none;
      position: relative;
      border: none;
      color: transparent;

      span, svg, img {
        opacity: 0;
      }

      &:after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        height: 1.8rem;
        width: 1.8rem;
        border-radius: 50%;
        border-width: .2rem;
        border-style: solid;
        border-color: map_get($foreground, text-primary) map_get($foreground, text-primary) transparent transparent;
        animation: loading-animation .75s linear infinite;

        @keyframes loading-animation {
          0% { transform: translate(-50%,-50%) rotate(0deg); }
          100% { transform: translate(-50%,-50%) rotate(360deg); }
        }

      }

    }

    &:before {
      content: "";
      opacity: 0;
      pointer-events: none;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: map_get($background, ripple);
      background-repeat: no-repeat;
      background-position: 50%;
      transform: scale(10, 10);
      transition: transform .5s, opacity 1s;
    }

    &:active:before {
      opacity: .3;
      transform: scale(0, 0);
      transition: 0s;
    }

  }


  /*
   * Default button
   */

  .btn {
    @extend %button-base;
    background: transparent;
    @include get-prop-color(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(fill, map_get($foreground, text-primary), 0, $theme);

    &:hover, &:focus, &:active {
      @include get-prop-color(background, map_get($background, hover), .86, $theme);
    }

    &:disabled {
      pointer-events: none;
      color: map_get($foreground, disabled);
      fill: map_get($foreground, disabled);
    }

  }


  /*
   * Raised button
   */

  .btn-raised {
    @extend %button-base;
    box-shadow: 0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);
    @include get-prop-contrast(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-contrast(fill, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(background, map_get($background,  card), 0, $theme);

    &:hover, &:focus, &:active {
      box-shadow: 0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);
    }

    &:disabled {
      pointer-events: none;
      box-shadow: none;
      background: map_get($background, hover);
      color: map_get($foreground, disabled);
      fill: map_get($foreground, disabled);
    }

  }


  /*
   * Outline button
   */

  .btn-outline {
    @extend %button-base;
    background: transparent;
    border-width: .2rem;
    border-style: solid;
    @include get-prop-color(border-color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(fill, map_get($foreground, text-primary), 0, $theme);

    &:hover, &:focus, &:active {
      @include get-prop-color(background, map_get($background, hover), .86, $theme);
    }

    &:disabled {
      pointer-events: none;
      border-color: map_get($foreground, disabled);
      color: map_get($foreground, disabled);
      fill: map_get($foreground, disabled);
    }

  }


  /*
   * Icon button
   */

  .btn-icon {
    @extend %button-base;
    justify-content: center;
    align-items: center;
    width: $button-icon-size;
    height: $button-icon-size;
    padding: 0;
    border-radius: 50%;
    background: transparent;
    @include get-prop-color(color, map_get($foreground, text-primary), 0, $theme);
    @include get-prop-color(fill, map_get($foreground, text-primary), 0, $theme);

    &:hover, &:focus, &:active {
      @include get-prop-color(background, map_get($background, hover), .86, $theme);
    }

    &:disabled {
      pointer-events: none;
      border-color: map_get($foreground, disabled);
      color: map_get($foreground, disabled);
      fill: map_get($foreground, disabled);
    }

  }

}