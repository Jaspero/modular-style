/*==================================================

  FLUID - VARIABLES

==================================================*/

/*
** 1. Small screen size. Fluid functions won't scale
**    below this threshold.
** 2. Big screen size. Fluid functions won't scale
**    above this threshold.
*/

$min-vw: 60rem; /* 1 */
$max-vw: 140rem; /* 2 */


/*
** Helper function used for calculations. Don't change
** this.
*/

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}


/*==================================================

  FLUID - MARGIN & PADDING

==================================================*/

/*
** Say goodbye to media queries.
**
** e.g. @include fluid(20rem, 10rem, padding);
** Padding will be 20rem on big screens, and scale
** down to 10rem on small screens.
*/

@mixin fluid($max, $min, $prop) {

  $maxTop: 0;
  $maxRight: 0;
  $maxBottom: 0;
  $maxLeft: 0;

  $minTop: 0;
  $minRight: 0;
  $minBottom: 0;
  $minLeft: 0;

  @if length($max) == 1 {
    $maxTop: $max;
    $maxRight: $max;
    $maxBottom: $max;
    $maxLeft: $max;
  }
  @if length($max) == 2 {
    $maxTop: nth($max, 1);
    $maxRight: nth($max, 2);
    $maxBottom: nth($max, 1);
    $maxLeft: nth($max, 2);
  }
  @if length($max) == 3 {
    $maxTop: nth($max, 1);
    $maxRight: nth($max, 2);
    $maxBottom: nth($max, 3);
    $maxLeft: nth($max, 2);
  }
  @if length($max) == 4 {
    $maxTop: nth($max, 1);
    $maxRight: nth($max, 2);
    $maxBottom: nth($max, 3);
    $maxLeft: nth($max, 4);
  }

  @if length($min) == 1 {
    $minTop: $min;
    $minRight: $min;
    $minBottom: $min;
    $minLeft: $min;
  }
  @if length($min) == 2 {
    $minTop: nth($min, 1);
    $minRight: nth($min, 2);
    $minBottom: nth($min, 1);
    $minLeft: nth($min, 2);
  }
  @if length($min) == 3 {
    $minTop: nth($min, 1);
    $minRight: nth($min, 2);
    $minBottom: nth($min, 3);
    $minLeft: nth($min, 2);
  }
  @if length($min) == 4 {
    $minTop: nth($min, 1);
    $minRight: nth($min, 2);
    $minBottom: nth($min, 3);
    $minLeft: nth($min, 4);
  }

  & {
    #{$prop}-top: $minTop;
    #{$prop}-right: $minRight;
    #{$prop}-bottom: $minBottom;
    #{$prop}-left: $minLeft;

    @media screen and (min-width: $min-vw) {
      #{$prop}-top: calc(#{$minTop} + #{strip-unit($maxTop - $minTop)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      #{$prop}-right: calc(#{$minRight} + #{strip-unit($maxRight - $minRight)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      #{$prop}-bottom: calc(#{$minBottom} + #{strip-unit($maxBottom - $minBottom)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      #{$prop}-left: calc(#{$minLeft} + #{strip-unit($maxLeft - $minLeft)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
    }
    @media screen and (min-width: $max-vw) {
      #{$prop}-top: $maxTop;
      #{$prop}-right: $maxRight;
      #{$prop}-bottom: $maxBottom;
      #{$prop}-left: $maxLeft;
    }
  }
}


/*==================================================

  FLUID - FONT-SIZE

==================================================*/

/*
** Say goodbye to media queries.
**
** e.g. @include font(2rem, 1.6rem);
** Font-size will be 2rem on big screens, and scale
** down to 1.6rem on small screens.
*/

@mixin font-size($max, $min) {
  & {
    font-size: $min;
    @media screen and (min-width: $min-vw) {
      font-size: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
    }
    @media screen and (min-width: $max-vw) {
      font-size: $max;
    }
  }
}


/*==================================================

  OVERLAY

==================================================*/

/*
** Overlay mixin. Make sure to use it after the CSS
** "background" element.
**
** Use rgba() format to pass background color to it.
** e.g. @include overlay(rgba(0,0,0,.5));
** This passes a black overlay with 50% opacity.
**
** Contains IE and Edge fallback.
*/

@mixin overlay($overlayColor) {

  background-color: $overlayColor;
  background-blend-mode: overlay;

  /* IE10+ fallback */
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    position: relative;
    &:after {
      content: '';
      display: block;
      z-index: 0;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: $overlayColor;
    }
    & > * {
      position: relative;
      z-index: 1;
    }
  }

  /* Microsoft Edge fallback */
  @supports (-ms-ime-align: auto) {
    position: relative;
    &:after {
      content: '';
      display: block;
      z-index: 0;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: $overlayColor;
    }
    & > * {
      position: relative;
      z-index: 1;
    }
  }

}