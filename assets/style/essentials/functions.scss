/*==================================================

  HELPERS & VARIABLES
  
==================================================*/

// FLUID â€“ min & max screen sizes
$min-vw: 50rem;
$max-vw: 150rem;

// Fluid helper
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}


/*==================================================

  FLUID TYPOGRAPHY

==================================================*/

@mixin font-size($max, $min) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min);
  $u4: unit($max);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max;
      }
    }
  }
}


/*==================================================

  FLUID PADDING
  
==================================================*/

@mixin test($values...) {    
  @each $var in $values {
      padding: #{$var};
  }
}

@mixin padding($max, $min) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min);
  $u4: unit($max);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      padding: $min;
      @media screen and (min-width: $min-vw) {
        padding: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        padding: $max;
      }
    }
  }
}

@mixin padding-top($max, $min) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min);
  $u4: unit($max);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      padding-top: $min;
      @media screen and (min-width: $min-vw) {
        padding-top: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        padding-top: $max;
      }
    }
  }
}

@mixin padding-right($max, $min) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min);
  $u4: unit($max);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      padding-right: $min;
      @media screen and (min-width: $min-vw) {
        padding-right: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        padding-right: $max;
      }
    }
  }
}

@mixin padding-bottom($max, $min) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min);
  $u4: unit($max);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      padding-bottom: $min;
      @media screen and (min-width: $min-vw) {
        padding-bottom: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        padding-bottom: $max;
      }
    }
  }
}

@mixin padding-left($max, $min) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min);
  $u4: unit($max);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      padding-left: $min;
      @media screen and (min-width: $min-vw) {
        padding-left: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        padding-left: $max;
      }
    }
  }
}


/*==================================================

  SCROLL ANIMATIONS

==================================================*/

@mixin scroll-animation-left() {
  transform: translateX(-50%);
  transition: $scroll-transition;
  &.enter { opacity: 1 !important; transform: translateX(0); }
}

@mixin scroll-animation-right() {
  transform: translateX(50%);
  transition: $scroll-transition;
  &.enter { opacity: 1 !important; transform: translateX(0); }
}

@mixin scroll-animation-top() {
  transform: translateY(-50%);
  transition: $scroll-transition;
  &.enter { opacity: 1 !important; transform: translateY(0); }
}

@mixin scroll-animation-bottom() {
  transform: translateY(50%);
  transition: $scroll-transition;
  &.enter { opacity: 1 !important; transform: translateY(0); }
}

@mixin scroll-animation-fade-in() {
  transition: $scroll-transition;
  &.enter { opacity: 1 !important; }
}


/*==================================================

  LIGHTEN & DARKEN
  
==================================================*/

@function lighten($color, $percentage) {
  @return mix(white, $color, $percentage);
}

@function darken($color, $percentage) {
  @return mix(black, $color, $percentage);
}