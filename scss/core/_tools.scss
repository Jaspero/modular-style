/*
 * Fluid function
 */

$low-screen-limit : 600px;
$high-screen-limit: 1600px;

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid($max, $min, $prop) {
  & {
    #{$prop}: $min;
    @media screen and (min-width: $low-screen-limit) {
      #{$prop}: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$low-screen-limit}) / #{strip-unit($high-screen-limit - $low-screen-limit)}));
    }
    @media screen and (min-width: $high-screen-limit) {
      #{$prop}: $max;
    }
  }
}


/*
 * Contrast function
 */

@function contrast($value) {
  $result: null;
  @if ((0.2126 * red($value) + 0.7152 * green($value) + 0.0722 * blue($value)) > 128) {
    $result: rgba(0,0,0,.9);
  }
  @else {
    $result: rgb(255,255,255);
  }
  @return $result;
}


/*
 * Color matching
 */

@mixin get-prop-color($prop, $default, $hue, $theme) {

  $primary    : map-get($theme, primary);
  $accent     : map-get($theme, accent);
  $warn       : map-get($theme, warn);
  $success    : map-get($theme, success);
  $foreground : map-get($theme, foreground);
  $background : map-get($theme, background);

  #{$prop}: $default;
  &[data-color='primary'] { #{$prop}: fade-out($primary, $hue); }
  &[data-color='accent']  { #{$prop}: fade-out($accent, $hue); }
  &[data-color='warn']    { #{$prop}: fade-out($warn, $hue); }
  &[data-color='success'] { #{$prop}: fade-out($success, $hue); }

}

@mixin get-prop-contrast($prop, $default, $hue, $theme) {

  $primary    : map-get($theme, primary);
  $accent     : map-get($theme, accent);
  $warn       : map-get($theme, warn);
  $success    : map-get($theme, success);
  $foreground : map-get($theme, foreground);
  $background : map-get($theme, background);

  #{$prop}: $default;
  &[data-color='primary'] { #{$prop}: contrast(fade-out($primary, $hue)); }
  &[data-color='accent']  { #{$prop}: contrast(fade-out($accent, $hue)); }
  &[data-color='warn']    { #{$prop}: contrast(fade-out($warn, $hue)); }
  &[data-color='success'] { #{$prop}: contrast(fade-out($success, $hue)); }

}