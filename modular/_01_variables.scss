/**
 * Variables
 *
 * TODO: add description
 *
 *============================================================================*/



/* Breakpoints
 *============================================================================*/

$breakpoints: (
        md: 1200px,
        sm: 900px,
        xs: 600px
);



/* Properties
 *============================================================================*/

$properties: (
        float: (
                short: fl, // short - Optional
                values: (left, right),
                media: false, // media - Optional
                hover: false, // hover - Optional
                active: false, // active - Optional
        ),
        test: (
                values: (1: one, 2: two),
        )
);



@function get-property-name($key, $value) {
  // If property has a shorthand name
  @if map-get($value, short) and map-get($value, short) != '' {
    @return map-get($value, short);
  }
  // If property doesn't have a shorthand name
  @else {
    @return $key;
  }
}



@function get-value($key, $value) {
  @if 1 {}
  @else {}
}



@each $properties-key, $properties-value in $properties {
  $property-name: get-property-name($properties-key, $properties-value);
  $values: map-get($properties-value, 'values');
  $media: map-get($properties-value, 'media');
  $hover: map-get($properties-value, 'hover');
  $active: map-get($properties-value, 'active');

  @each $key, $value in $values {
    @debug $key $value;
  };

  @each $value in $values {
    .#{$property-name}-#{$value} { #{$properties-key}: $value; }
  };

  // Values are in a list format
  @if type-of($values) == list == true {
    /*@debug $properties-key is a list ($values);*/
  }

  // Values are in a map format
  @if type-of($values) == map == true {
    /*@debug $properties-key is a map ($values);*/
  }

  // Hover & Focus style
  @if $hover == true {
    /*@debug hover is true;*/
  }

  // Responsive style
  @if $media == true {
    /*@debug responsive is true;*/
  }

  // Active class style
  @if $active == true {
    /*@debug active is true;*/
  }
}



/* Colors
 *============================================================================*/

$colors: (
        main: (dodgerblue, white),
        warn: (crimson, white)
);

$light: (
        light: 30%,
        lighter: 60%,
        lightest: 90%
);

$dark: (
        dark: -30%,
        darker: -60%,
        darkest: -90%
);



/* Sizes
 *============================================================================*/

$unit: 4px;

$sizes: (
        0: $unit * 0,
        1: $unit * 1,
        2: $unit * 2,
        3: $unit * 3,
        4: $unit * 4,
        5: $unit * 5,
        6: $unit * 6,
        auto: auto
);
