/**
 * Variables
 *
 * TODO: add description
 *
 *============================================================================*/



/* Breakpoints
 *============================================================================*/

$breakpoints: (
        md: 1200px,
        sm: 900px,
        xs: 600px
);



/* Properties
 *============================================================================*/

$properties: (
        align-content: (
                property  : 'align-content',
                prefix    : 'ac',
                values    : ('stretch', 'center'),
                responsive: true,
                hover     : false
        ),
        overflow: (
                property  : 'overflow',
                prefix    : 'of',
                values    : ('hidden', 'auto'),
                responsive: false,
                hover     : false
        )
);

@each $properties-key, $properties-value in $properties {

  // Generate a class with the following syntax:
  // .[prefix]-[value] { [property]: [value]; }
  @each $key, $value in map-get($properties-value, "values") {
    .#{map-get($properties-value, "prefix")}-#{$key} { #{map-get($properties-value, "property")}: #{$key}; }
  }

  // Generate a responsive class with the following syntax:
  // .[prefix]-[value]-[breakpoint] { [property]: [value]; }
  @if map-get($properties-value, "responsive") {
    @each $key, $value in $breakpoints {
      @media (max-width: $value) {
        @each $_key, $_value in map-get($properties-value, "values") {
          .#{map-get($properties-value, "prefix")}-#{$_key}-#{$key} { #{map-get($properties-value, "property")}: #{$_key}; }
        }
      }
    }
  }
}



/* Colors
 *============================================================================*/

$colors: (
        main: (dodgerblue, white),
        warn: (crimson, white)
);

$light: (
        light: 30%,
        lighter: 60%,
        lightest: 90%
);

$dark: (
        dark: -30%,
        darker: -60%,
        darkest: -90%
);



/* Sizes
 *============================================================================*/

$unit: 4px;

$sizes: (
        0: $unit * 0,
        1: $unit * 1,
        2: $unit * 2,
        3: $unit * 3,
        4: $unit * 4,
        5: $unit * 5,
        6: $unit * 6,
        auto: auto
);
