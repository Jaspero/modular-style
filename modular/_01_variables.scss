/**
 * Variables
 *
 * TODO: add description
 *
 *============================================================================*/



/* Breakpoints
 *============================================================================*/

$breakpoints: (
        md: 1200px,
        sm: 900px,
        xs: 600px
);



/* Properties
 *============================================================================*/

$overflow-y: (hidden, auto);

$properties: (
        float: (
                values: (left, right),
                short: fl,
                media: true,
                hover: true,
                active: true,
        ),
        overflow: (
                values: (a: auto, h: hidden),
        ),
        overflow-x: (
                values: (a auto, h hidden),
                short: of-x,
        ),
        overflow-y: (
                values: $overflow-y,
        )
);



@function get-prefix($key, $value) {
  // If property has a shorthand name
  @if map-get($value, short) and map-get($value, short) != '' {
    @return map-get($value, short);
  }
  // If property doesn't have a shorthand name
  @else {
    @return $key;
  }
}

@function get-value($key, $value) {
  @if $value == null {
    @return $key;
  } @else {
    @return $value;
  }
}



@each $properties-key, $properties-value in $properties {
  $prefix: get-prefix($properties-key, $properties-value);
  $values: map-get($properties-value, 'values');

  @each $_key, $_value in $values {
    $suffix: $_key;
    $value: get-value($_key, $_value);
    .#{$prefix}-#{$suffix} {
      #{$properties-key}: $value;
    }
  }

  @if map-get($properties-value, 'media') == true {
    @each $breakpoint-key, $breakpoint-value in $breakpoints {
      @media (max-width: $breakpoint-value) {
        @each $_key, $_value in $values {
          $suffix: $_key;
          $value: get-value($_key, $_value);
          .#{$prefix}-#{$suffix}-#{$breakpoint-key} {
            #{$properties-key}: $value;
          }
        }
      }
    }
  }

  @if map-get($properties-value, 'hover') == true {
    @each $_key, $_value in $values {
      $suffix: $_key;
      $value: get-value($_key, $_value);
      .#{$prefix}-#{$suffix}-hover:hover,
      .#{$prefix}-#{$suffix}-hover:focus {
        #{$properties-key}: $value;
      }
    }
  }

  @if map-get($properties-value, 'active') == true {
    @each $_key, $_value in $values {
      $suffix: $_key;
      $value: get-value($_key, $_value);
      .#{$prefix}-#{$suffix}.active {
        #{$properties-key}: $value;
      }
    }
  }
}



/* Colors
 *============================================================================*/

$colors: (
        main: (dodgerblue, white),
        warn: (crimson, white)
);

$light: (
        light: 30%,
        lighter: 60%,
        lightest: 90%
);

$dark: (
        dark: -30%,
        darker: -60%,
        darkest: -90%
);



/* Sizes
 *============================================================================*/

$unit: 4px;

$sizes: (
        0: $unit * 0,
        1: $unit * 1,
        2: $unit * 2,
        3: $unit * 3,
        4: $unit * 4,
        5: $unit * 5,
        6: $unit * 6,
        auto: auto
);
