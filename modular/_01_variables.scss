/**
 * Variables
 *
 * TODO: add description
 *
 *============================================================================*/



/* Breakpoints
 *============================================================================*/

$breakpoints: (
        md: 1200px,
        sm: 900px,
        xs: 600px
);



/* Properties
 *============================================================================*/

$properties: (
        align-content: (
                shorthand: 'ac',
                responsive: false,
                hover: false,
                values: (
                        'stretch': 'stretch',
                        'start': 'flex-start'
                ),
        ),
        overflow: (
                values: ('auto', 'hidden'),
        )
);


@each $properties-key, $properties-value in $properties {

  // If property has a shorthand version
  @if map-get($properties-value, 'shorthand') and map-get($properties-value, 'shorthand') != '' {
    @debug map-get($properties-value, 'values');

    // Values can be maps or lists
    @debug type-of(map-get($properties-value, 'values')) == map;

    // Hover & Focus style
    @if map-get($properties-value, 'hover') {
      @debug hover is true;
    }

    // Responsive style
    @if map-get($properties-value, 'responsive') {
      @debug responsive is true;
    }
  }
  // If property doesn't have a shorthand version
  @else {
    @debug No shorthand value for $properties-key
  }
}



/* Colors
 *============================================================================*/

$colors: (
        main: (dodgerblue, white),
        warn: (crimson, white)
);

$light: (
        light: 30%,
        lighter: 60%,
        lightest: 90%
);

$dark: (
        dark: -30%,
        darker: -60%,
        darkest: -90%
);



/* Sizes
 *============================================================================*/

$unit: 4px;

$sizes: (
        0: $unit * 0,
        1: $unit * 1,
        2: $unit * 2,
        3: $unit * 3,
        4: $unit * 4,
        5: $unit * 5,
        6: $unit * 6,
        auto: auto
);
